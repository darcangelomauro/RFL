name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  linux_build_and_test:

    strategy:
      fail-fast: false
      matrix:
        BUILD_TYPE: [Release, Debug]
        os: [ubuntu-22.04, ubuntu-20.04, ubuntu-18.04]

    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{matrix.os}}
    if: ${{ !contains(github.event.head_commit.message, '#docs') }} # Skip this action if the commit is just for docs.

    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y cmake libopenblas-dev liblapack-dev libarpack2-dev libsuperlu-dev wget
    
    - name: Download Armadillo from SourceForge
      run: mkdir armadillo && cd armadillo && wget -O armadillo.tar.xz https://sourceforge.net/projects/arma/files/armadillo-11.2.3.tar.xz/download

    - name: Unzip Armadillo tarball
      run: tar -zxvf ./armadillo.tar.xz

    - name: Install Armadillo
      run: cd armadillo-11.2.3 && cmake .

    - name: Add Armadillo to path
      run: export PATH:="~/armadillo/lib/x86_64-linux-gnu:~/armadillo/include:PATH"

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.BUILD_TYPE}}

    - name: Build the entire project
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{matrix.BUILD_TYPE}} --target all
    
    - name: Run CTest
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -j2 -C ${{matrix.BUILD_TYPE}} --output-on-failure
      
